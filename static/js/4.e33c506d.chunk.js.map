{"version":3,"sources":["hoc/AuthRedirect.js","components/Main/Dialogs/Dialogs.module.css","components/Main/Dialogs/Message/Message.module.css","components/Main/Dialogs/DialogItem/DialogItem.module.css","components/Main/Dialogs/Message/Message.jsx","components/Main/Dialogs/DialogItem/DialogItem.jsx","components/Main/Dialogs/Dialogs.jsx","components/Main/Dialogs/DialogsContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","React","connect","state","isAuth","auth","module","exports","Message","className","styles","messagesItem","message","DialogItem","path","id","to","dialogsItem","activeClassName","active","name","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","textField","btn","Dialogs","dialogsElements","messagesPage","dialogsData","map","dialog","key","messagesElements","messagesData","m","Math","random","toFixed","length","wrapper","header","contentWrapper","dialogsList","messagesList","data","sendMessage","newMessageBody","compose","dispatch","sendMessageActionCreator"],"mappings":"4MAIaA,EAAmB,SAACC,GAC7B,IAMMC,EAPqC,uKAUnC,OACI,kBAACD,EAAcE,KAAKC,WAXW,GAOXC,IAAMJ,WAStC,OAAOK,aAfe,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,UAapBF,CAAyBJ,K,oBCnBpCQ,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,eAAiB,gCAAgC,YAAc,6BAA6B,aAAe,8BAA8B,UAAY,2BAA2B,IAAM,uB,oBCA5QD,EAAOC,QAAU,CAAC,aAAe,gC,oBCAjCD,EAAOC,QAAU,CAAC,YAAc,gCAAgC,OAAS,6B,yGCQ1DC,EANC,SAACR,GACb,OACI,yBAAKS,UAAWC,IAAOC,cAAeX,EAAMY,U,0BCMrCC,EAPI,SAACb,GAChB,IAAIc,EAAO,YAAcd,EAAMe,GAC/B,OACI,kBAAC,IAAD,CAASC,GAAIF,EAAML,UAAWC,IAAOO,YAAaC,gBAAiBR,IAAOS,QAASnB,EAAMoB,O,iCCuB3FC,EAAYC,YAAiB,IAa7BC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAXL,SAACxB,GACpB,OACI,0BAAM0B,SAAU1B,EAAM2B,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUV,KAAK,iBAAiBW,YAAY,qBACvDC,SAAU,CAACC,IAAUZ,GACrBZ,UAAWC,IAAOwB,YACzB,4BAAQzB,UAAWC,IAAOyB,KAA1B,aAUGC,EAxCC,SAAApC,GACZ,IAAIqC,EAAkBrC,EAAMsC,aAAaC,YAAYC,KAAI,SAAAC,GAAM,OACvD,kBAAC,EAAD,CAAYrB,KAAMqB,EAAOrB,KAAML,GAAI0B,EAAO1B,GAAI2B,IAAKD,EAAO1B,QAC9D4B,EAAmB3C,EAAMsC,aAAaM,aAAaJ,KAAI,SAAAK,GAAC,OACpD,kBAAC,EAAD,CAASjC,QAASiC,EAAEjC,QAAS8B,IAAKI,KAAKC,SAASC,QAAQ,GAAKH,EAAEI,YAIvE,OACI,yBAAKxC,UAAWC,IAAOwC,SACnB,yBAAKzC,UAAWC,IAAOyC,QAAvB,WACA,yBAAK1C,UAAWC,IAAO0C,gBACnB,yBAAK3C,UAAWC,IAAO2C,aAAchB,GACrC,yBAAK5B,UAAWC,IAAO4C,cAClBX,EACD,kBAACpB,EAAD,CAAqBG,SAVjB,SAAC6B,GACbvD,EAAMwD,YAAYD,EAAKE,uB,wBCKpBC,sBACXxD,aAbkB,SAACC,GACnB,MAAO,CACHmC,aAAcnC,EAAMmC,iBAIH,SAACqB,GACtB,MAAO,CACHH,YAAa,SAACC,GAAD,OAAoBE,EAASC,YAAyBH,SAMvE7D,IAFW8D,CAGbtB","file":"static/js/4.e33c506d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            // if (!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n            return (\r\n                <Component {...this.props}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper___SNLK\",\"header\":\"Dialogs_header__1qMVU\",\"contentWrapper\":\"Dialogs_contentWrapper__kcMQi\",\"dialogsList\":\"Dialogs_dialogsList__3ZSYd\",\"messagesList\":\"Dialogs_messagesList__3swSf\",\"textField\":\"Dialogs_textField__ihvAL\",\"btn\":\"Dialogs_btn__32hSK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesItem\":\"Message_messagesItem__n17z6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItem\":\"DialogItem_dialogsItem__1LAZU\",\"active\":\"DialogItem_active__2OxCq\"};","import React from 'react';\r\nimport styles from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={styles.messagesItem}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport styles from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <NavLink to={path} className={styles.dialogsItem} activeClassName={styles.active}>{props.name}</NavLink>\r\n)\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../helpers/validators/validators\";\r\n\r\nconst Dialogs = props => {\r\n    let dialogsElements = props.messagesPage.dialogsData.map(dialog => (\r\n            <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}/>)),\r\n        messagesElements = props.messagesPage.messagesData.map(m => (\r\n            <Message message={m.message} key={Math.random().toFixed(2) + m.length}/>)),\r\n        addNewMessage = (data) => {\r\n            props.sendMessage(data.newMessageBody);\r\n        };\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.header}>Dialogs</div>\r\n            <div className={styles.contentWrapper}>\r\n                <div className={styles.dialogsList}>{dialogsElements}</div>\r\n                <div className={styles.messagesList}>\r\n                    {messagesElements}\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your message\"\r\n                   validate={[required, maxLength]}\r\n                   className={styles.textField}/>\r\n            <button className={styles.btn}> Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm)\r\n\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {sendMessageActionCreator} from \"../../../redux/messagesReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => dispatch(sendMessageActionCreator(newMessageBody)),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}